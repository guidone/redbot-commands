[
  {
      "id": "4ae37f7c.a3b2d",
      "type": "subflow",
      "name": "Commands",
      "info": "The **Commands** plugins is used to show some localized contents as answer to simple\nTelegram-like commands (i.e., `/my-command` or `/terms`).\n\nThe plugin works with all platforms and the contents are defined using the **Mission Control**'s content management system. It also supports localized contents: the chatbot user will always receive the content in the registered language, if present, otherwise the fallback language will be used.\n\nFor the **Telegram** platform, the chatbot menu in the **Telegram** client is updated automatically.\n\n## How to use\n\nConnect the first pin to the senders node, use the second pin as a pass-thru pin to\nthe other chatbot sections (to handle all other requests):\n\n![How to use Commands plugin](https://dashboard.red-bot.io/assets/585db3b0-236f-4a17-99fe-aac7d69cbb9e)\n\n## Define contents\n\nUse Mission Control to define the contents. Click on _\"Add command\"_\nto add a new command (i.e., `/privacy`) then click on the plus sign to _\"Create content\"_, \ndon't forget to define the language of the content and the _slug_.\n\nWhat's a **slug**? It's a unique identifier for the same content written in a different language.\nFor example, a content with slug _privacy_ and English language and a content with the same slug _privacy_ and Italian language. In the \n**Commands** window the clickable labels _\"en\"_ and _\"it\"_ will be shown next to _\"slug: privacy\"_.\n\n## Parameters\n\n -  _ChatbotId_: it's the chatbotId for which we want to load the _commands_ for. Mission Control is able to handle multiple chatbots, you can find the current _chatbotId_ in the drop-down menu in the top right corner.\n - _Failback language_: in case a content is not available in the user's language, the default (or failback language will be used)\n -  _Update menu_: only for **Telegram**, automatically updates the chatbot menu in the **Telegram**'s client. \n\n\n## Changelog\n- _1.3.1_ Fixed empty content body, now command with missing content just passes through\n- _1.3.0_ Updated docs and removed dependencies from internal configuration.\n- _1.1.0_ Add *failbackLanguage* and *chatbotId* parameter\n- _1.0.3_ Fixed \"send\" error",
      "category": "RedBot Flows",
      "in": [
          {
              "x": 60,
              "y": 120,
              "wires": [
                  {
                      "id": "713c0557.e8f73c"
                  }
              ]
          }
      ],
      "out": [
          {
              "x": 1620,
              "y": 100,
              "wires": [
                  {
                      "id": "73981e80.0fa4d",
                      "port": 0
                  }
              ]
          },
          {
              "x": 840,
              "y": 300,
              "wires": [
                  {
                      "id": "713c0557.e8f73c",
                      "port": 1
                  },
                  {
                      "id": "f105aa1c.ddeba8",
                      "port": 1
                  },
                  {
                      "id": "23b96bda.f03d04",
                      "port": 1
                  },
                  {
                      "id": "9da63037f4f6f1c2",
                      "port": 1
                  }
              ]
          }
      ],
      "env": [
          {
              "name": "chatbotId",
              "type": "str",
              "value": "",
              "ui": {
                  "label": {
                      "en-US": "ChatbotId"
                  },
                  "type": "input",
                  "opts": {
                      "types": [
                          "str"
                      ]
                  }
              }
          },
          {
              "name": "failbackLanguage",
              "type": "str",
              "value": "en",
              "ui": {
                  "label": {
                      "en-US": "Fallback language"
                  },
                  "type": "select",
                  "opts": {
                      "opts": [
                          {
                              "l": {
                                  "en-US": "Arabic"
                              },
                              "v": "ar"
                          },
                          {
                              "l": {
                                  "en-US": "Bengali"
                              },
                              "v": "bn"
                          },
                          {
                              "l": {
                                  "en-US": "Catalan"
                              },
                              "v": "ca"
                          },
                          {
                              "l": {
                                  "en-US": "Danish"
                              },
                              "v": "da"
                          },
                          {
                              "l": {
                                  "en-US": "German"
                              },
                              "v": "de"
                          },
                          {
                              "l": {
                                  "en-US": "Greek"
                              },
                              "v": "el"
                          },
                          {
                              "l": {
                                  "en-US": "English"
                              },
                              "v": "en"
                          },
                          {
                              "l": {
                                  "en-US": "Spanish"
                              },
                              "v": "es"
                          },
                          {
                              "l": {
                                  "en-US": "Basque"
                              },
                              "v": "eu"
                          },
                          {
                              "l": {
                                  "en-US": "Persian"
                              },
                              "v": "fa"
                          },
                          {
                              "l": {
                                  "en-US": "Finnish"
                              },
                              "v": "fi"
                          },
                          {
                              "l": {
                                  "en-US": "French"
                              },
                              "v": "fr"
                          },
                          {
                              "l": {
                                  "en-US": "Irish"
                              },
                              "v": "ga"
                          },
                          {
                              "l": {
                                  "en-US": "Galician"
                              },
                              "v": "gl"
                          },
                          {
                              "l": {
                                  "en-US": "Hindi"
                              },
                              "v": "hi"
                          },
                          {
                              "l": {
                                  "en-US": "Hungarian"
                              },
                              "v": "hu"
                          },
                          {
                              "l": {
                                  "en-US": "Armenian"
                              },
                              "v": "hy"
                          },
                          {
                              "l": {
                                  "en-US": "Italian"
                              },
                              "v": "it"
                          },
                          {
                              "l": {
                                  "en-US": "Japanese"
                              },
                              "v": "ja"
                          },
                          {
                              "l": {
                                  "en-US": "Dutch"
                              },
                              "v": "nl"
                          },
                          {
                              "l": {
                                  "en-US": "Norwegian"
                              },
                              "v": "no"
                          },
                          {
                              "l": {
                                  "en-US": "Portuguese"
                              },
                              "v": "pt"
                          },
                          {
                              "l": {
                                  "en-US": "Romanian"
                              },
                              "v": "ro"
                          },
                          {
                              "l": {
                                  "en-US": "Russian"
                              },
                              "v": "ru"
                          },
                          {
                              "l": {
                                  "en-US": "Slovenian"
                              },
                              "v": "sl"
                          },
                          {
                              "l": {
                                  "en-US": "Slovenian"
                              },
                              "v": "sv"
                          },
                          {
                              "l": {
                                  "en-US": "Tamil"
                              },
                              "v": "ta"
                          },
                          {
                              "l": {
                                  "en-US": "Thai"
                              },
                              "v": "th"
                          },
                          {
                              "l": {
                                  "en-US": "Tagalog"
                              },
                              "v": "tl"
                          },
                          {
                              "l": {
                                  "en-US": "Turkish"
                              },
                              "v": "tr"
                          },
                          {
                              "l": {
                                  "en-US": "Ukrainian"
                              },
                              "v": "uk"
                          },
                          {
                              "l": {
                                  "en-US": "Chinese"
                              },
                              "v": "zh"
                          }
                      ]
                  }
              }
          },
          {
              "name": "updateMenu",
              "type": "bool",
              "value": "false",
              "ui": {
                  "label": {
                      "en-US": "Update platform menu"
                  },
                  "type": "input",
                  "opts": {
                      "types": [
                          "bool"
                      ]
                  }
              }
          }
      ],
      "meta": {
          "module": "redbot-commands",
          "type": "redbot-commands",
          "version": "1.3.1",
          "author": "Guido Bellomo <guido.bellomo@gmail.com>"
      },
      "color": "#ff6633",
      "outputLabels": [
          "Command Found",
          "Pass Thru"
      ],
      "icon": "font-awesome/fa-terminal"
  },
  {
      "id": "8e5ea84d.c2ba28",
      "type": "mc-configuration",
      "z": "4ae37f7c.a3b2d",
      "namespace": "commands",
      "chatbotId": "",
      "debug": true,
      "loadOnStartup": false,
      "inputs": 1,
      "x": 550,
      "y": 440,
      "wires": [
          [
              "779e40f75574d258"
          ]
      ]
  },
  {
      "id": "713c0557.e8f73c",
      "type": "chatbot-rules",
      "z": "4ae37f7c.a3b2d",
      "name": "",
      "rules": [
          {
              "type": "anyCommand"
          },
          {
              "type": "catchAll"
          }
      ],
      "outputs": 2,
      "x": 230,
      "y": 120,
      "wires": [
          [
              "f105aa1c.ddeba8"
          ],
          []
      ]
  },
  {
      "id": "f105aa1c.ddeba8",
      "type": "function",
      "z": "4ae37f7c.a3b2d",
      "name": "Find slug by comment",
      "func": "const commands = context.global.get('commands_commands');\nconst userMessage = msg.payload.content;\n\nconst found = commands.find(item => item.command === userMessage);\n\nif (found != null) {\n  msg.query = found.slug;\n  msg.payload.failbackLanguage = env.get('failbackLanguage');\n  node.send([msg, null]);\n} else {\n  node.send([null, msg]);\n}\n",
      "outputs": 2,
      "noerr": 0,
      "initialize": "",
      "finalize": "",
      "libs": [],
      "x": 490,
      "y": 100,
      "wires": [
          [
              "23b96bda.f03d04"
          ],
          []
      ],
      "outputLabels": [
          "Slug found",
          "Slug not found"
      ]
  },
  {
      "id": "23b96bda.f03d04",
      "type": "mc-content",
      "z": "4ae37f7c.a3b2d",
      "query": "",
      "language": "",
      "failbackLanguage": "",
      "chain": false,
      "x": 750,
      "y": 100,
      "wires": [
          [
              "9da63037f4f6f1c2"
          ],
          []
      ]
  },
  {
      "id": "6fe0cdee.bf17a4",
      "type": "chatbot-message",
      "z": "4ae37f7c.a3b2d",
      "name": "Show content",
      "message": [
          {
              "message": "{{payload.body}}"
          }
      ],
      "language": "none",
      "x": 1240,
      "y": 100,
      "wires": [
          [
              "73981e80.0fa4d"
          ]
      ]
  },
  {
      "id": "73981e80.0fa4d",
      "type": "chatbot-params",
      "z": "4ae37f7c.a3b2d",
      "name": "",
      "params": [
          {
              "platform": "telegram",
              "name": "parseMode",
              "value": "Markdown"
          },
          {
              "platform": "all",
              "name": "messageFlag",
              "value": "answer"
          }
      ],
      "outputs": 1,
      "x": 1440,
      "y": 100,
      "wires": [
          []
      ]
  },
  {
      "id": "cf8d947109197499",
      "type": "inject",
      "z": "4ae37f7c.a3b2d",
      "name": "",
      "props": [],
      "repeat": "",
      "crontab": "",
      "once": true,
      "onceDelay": "1",
      "topic": "",
      "x": 90,
      "y": 440,
      "wires": [
          [
              "ac19800db8876d1a"
          ]
      ]
  },
  {
      "id": "ac19800db8876d1a",
      "type": "function",
      "z": "4ae37f7c.a3b2d",
      "name": "Set chatbotId",
      "func": "const chatbotId = env.get('chatbotId');\n\nif (chatbotId == null || chatbotId === '') {\n    node.error('chatbotId is empty, please select one from your active chatbots in Mission Control', msg);\n    return;\n}\n\nreturn {\n    ...msg,\n    chatbotId: env.get('chatbotId')\n};",
      "outputs": 1,
      "noerr": 0,
      "initialize": "",
      "finalize": "",
      "libs": [],
      "x": 260,
      "y": 440,
      "wires": [
          [
              "8e5ea84d.c2ba28"
          ]
      ]
  },
  {
      "id": "779e40f75574d258",
      "type": "function",
      "z": "4ae37f7c.a3b2d",
      "name": "Get all commands",
      "func": "const { payload } = msg;\n\nconst slugs = payload.commands.map(command => command.slug);\n\nconsole.log('slugs', slugs)\n\nif (env.get('updateMenu')) {\n    return {\n        ...msg,\n        variables: {\n            slugs,\n            chatbotId: env.get('chatbotId')\n        }\n    };\n}",
      "outputs": 1,
      "noerr": 0,
      "initialize": "",
      "finalize": "",
      "libs": [],
      "x": 290,
      "y": 520,
      "wires": [
          [
              "a65a03afdc4ce6ba"
          ]
      ]
  },
  {
      "id": "a65a03afdc4ce6ba",
      "type": "mc-graphql",
      "z": "4ae37f7c.a3b2d",
      "name": "",
      "query": "query($slugs: [String], $chatbotId: String) {\n  contents(slugs: $slugs, chatbotId: $chatbotId) {\n    id\n    title\n    body\n    slug\n    createdAt\n    fields {\n      name\n      value\n    }\n  }\n}\n",
      "debug": true,
      "noerr": 0,
      "x": 540,
      "y": 520,
      "wires": [
          [
              "b9a52424981574bc"
          ],
          [],
          []
      ]
  },
  {
      "id": "2e4e7ece198db43e",
      "type": "chatbot-telegram-menu",
      "z": "4ae37f7c.a3b2d",
      "bot": "",
      "items": [],
      "x": 1380,
      "y": 520,
      "wires": []
  },
  {
      "id": "c88c1d928e2de001",
      "type": "function",
      "z": "4ae37f7c.a3b2d",
      "name": "Prepare commands (Telegram)",
      "func": "const commands = context.global.get('commands_commands');\nconst failbackLanguage = env.get('failbackLanguage');\n\nconst { payload, chatbots } = msg;\n\nconst getTitleFromSlug = slug => {\n    let content;\n    content = payload.contents\n        .find(content => content.language === failbackLanguage && content.slug === slug) \n        ||\n        payload.contents.find(content => content.slug === slug);\n\n    return content != null ? content.title : 'No title';\n}; \n\n// prepare telegram commands payload\nconst telegramCommands = commands\n    .map(command => ({\n        command: command.command, \n        description: getTitleFromSlug(command.slug)\n    }));\n\n// get the botNode for telegram and current chatbotId\nif (Array.isArray(chatbots.telegram) && chatbots.telegram.length !== 0) {\n    return {\n        ...msg,\n        botNode: chatbots.telegram[0].botNode,\n        commands: telegramCommands\n    };\n} else {\n    node.warn(`No active chatbot found for chatbotId ${env.get('chatbotId')} (Telegram)`);\n}\n\n\n\n",
      "outputs": 1,
      "noerr": 0,
      "initialize": "",
      "finalize": "",
      "libs": [],
      "x": 1130,
      "y": 520,
      "wires": [
          [
              "2e4e7ece198db43e"
          ]
      ]
  },
  {
      "id": "b9a52424981574bc",
      "type": "function",
      "z": "4ae37f7c.a3b2d",
      "name": "Get bots for current chatbotId",
      "func": "/*\n    Get bots for current chatbotId v1.0\n    Get all active chatbots for the current chatbotId in the env variable.\n    {\n      telegram: [\n          {\n              nodeId: ...,\n              botNode: ...,\n              transport: ...,\n              name: ...,\n              chatbotId: ...\n          }\n      ]\n    }\n*/\n\nconst chatbotId = env.get('chatbotId');\nconst chatbots = {};\n\nglobal.keys().forEach(key => {\n    if (key.startsWith('chatbot_info_') \n        && global.get(key) != null\n        && global.get(key)['chatbotId'] === chatbotId \n    ) {\n        const config = global.get(key);\n        if (chatbots[config.transport] == null) {\n            chatbots[config.transport] = [];\n        }\n        chatbots[config.transport].push(config);\n    }\n});\n\nreturn {\n    ...msg,\n    chatbots\n};",
      "outputs": 1,
      "noerr": 0,
      "initialize": "",
      "finalize": "",
      "libs": [],
      "x": 810,
      "y": 520,
      "wires": [
          [
              "c88c1d928e2de001"
          ]
      ]
  },
  {
      "id": "9da63037f4f6f1c2",
      "type": "function",
      "z": "4ae37f7c.a3b2d",
      "name": "Empty",
      "func": "if (msg.payload == null || msg.payload.body == null || msg.payload.body === '') {\n    node.send([null, msg]);\n} else {\n    node.send([msg, null]);\n}\n",
      "outputs": 2,
      "noerr": 0,
      "initialize": "",
      "finalize": "",
      "libs": [],
      "x": 1010,
      "y": 100,
      "wires": [
          [
              "6fe0cdee.bf17a4"
          ],
          []
      ]
  }
]